{"version":3,"sources":["components/todo/TodoPage.js","components/common/DateComponent.js","components/dashboard/Dashboard.js","components/routes/Routes.js","components/sideNavBar/SideNavBar.js","components/workspaces/StyledTreeItem.js","components/workspaces/Workspaces.js","assets/svg/PeopleIcon.svg","components/header/Header.js","components/layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["DropDownEditor","Editors","DraggableContainer","require","DraggableHeader","Draggable","RowActionsCell","Container","DropTargetRowContainer","Selectors","Data","RowRenderer","ReactDataGrid","Row","IssueTypeEditor","types","options","defaultColumnProperties","resizable","draggable","editable","renderComponent","Component","columns","key","name","width","formatter","ChatBubbleOutlineIcon","AccountCircleIcon","editor","id","value","React","useState","Date","selectedDate","setSelectedDate","utils","DateFnsUtils","Grid","container","justify","disableToolbar","variant","format","margin","label","onChange","date","KeyboardButtonProps","map","c","rows","thingsTodo","messageNotify","owner","status","dueDate","priority","Example","state","newTodo","selectedIds","onGridRowsUpdated","fromRow","toRow","updated","setState","slice","i","isDraggedRowSelected","selectedRows","rowDragSource","length","props","rowKey","filter","r","data","onRowsSelected","concat","row","onRowsDeselected","rowIds","indexOf","reorderRows","e","getSelectedRowsByKey","selectedKeys","draggedRows","rowSource","undraggedRows","args","rowTarget","idx","Array","prototype","splice","apply","onHeaderDrop","source","target","stateCopy","Object","assign","columnSourceIndex","findIndex","columnTargetIndex","emptyColumns","reorderedColumns","this","rowGetter","rowsCount","enableCellSelect","enableCellSelection","rowActionsCell","minHeight","rowRenderer","onRowDrop","rowSelection","showCheckbox","enableShiftSelect","selectBy","keys","values","onClick","newRows","push","Dashboard","open","className","defaultProps","Routes","exact","from","to","path","component","useStyles","makeStyles","theme","tree","color","palette","text","secondary","backgroundColor","action","hover","grey","SideNavBar","useTheme","item","xs","alignItems","style","fontSize","useTreeItemStyles","root","content","borderTopRightRadius","spacing","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","group","marginLeft","paddingLeft","expanded","selected","labelRoot","display","padding","labelIcon","marginRight","labelText","flexGrow","StyledTreeItem","classes","LabelIcon","ButtonIcon","buttonIcon","other","TreeItem","Typography","drawerHeader","mixins","toolbar","justifyContent","drawer","flexShrink","drawerPaper","Workspaces","handleDrawerClose","Drawer","anchor","paper","textAlign","IconButton","direction","placeholder","TreeView","defaultExpanded","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","nodeId","HomeIcon","AddCircleOutlineIcon","List","index","ListItem","button","ListItemText","primary","ListItemIcon","src","height","Divider","_extends","arguments","hasOwnProperty","call","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","viewBox","ref","ForwardRef","forwardRef","Header","searchText","setSearchText","flexDirection","Button","size","minWidth","menuButton","hide","transition","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","Layout","setOpen","handleDrawerOpen","flag","aria-label","edge","clsx","position","top","left","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eaa44470.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Editors } from \"react-data-grid-addons\";\r\nimport DateComponent from \"../common/DateComponent\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\n// import {IssueTypeEditor} from \"./\"\r\nconst { DropDownEditor } = Editors;\r\nconst {\r\n  DraggableHeader: { DraggableContainer },\r\n} = require(\"react-data-grid-addons\");\r\nconst {\r\n  Draggable: {\r\n    Container: DraggableContainerRow,\r\n    RowActionsCell,\r\n    DropTargetRowContainer,\r\n  },\r\n  Data: { Selectors },\r\n} = require(\"react-data-grid-addons\");\r\nconst RowRenderer = DropTargetRowContainer(ReactDataGrid.Row);\r\n\r\nconst statusTypes = [\r\n  { id: \"unassigned\", value: \"Unassigned\" },\r\n  { id: \"pending\", value: \"Pending\" },\r\n  { id: \"workingOnIt\", value: \"Working on it\" },\r\n  { id: \"stuck\", value: \"Stuck\" },\r\n  { id: \"done\", value: \"Done\" },\r\n  { id: \"critical\", value: \"Critical\" },\r\n];\r\nconst priorityTypes = [\r\n  { id: \"unassigned\", value: \"Unassigned\" },\r\n  { id: \"low\", value: \"Low\" },\r\n  { id: \"medium\", value: \"Medium\" },\r\n  { id: \"high\", value: \"High\" },\r\n  { id: \"urgent\", value: \"Urgent\" },\r\n];\r\nconst IssueTypeEditor = (types) => <DropDownEditor options={types} />;\r\n\r\nconst defaultColumnProperties = {\r\n  resizable: true,\r\n  draggable: true,\r\n  editable: true,\r\n};\r\nconst renderComponent = (Component) => <Component />;\r\n\r\nconst columns = [\r\n  { key: \"thingsTodo\", name: \"My Group\", width: 500 },\r\n  {\r\n    key: \"messageNotify\",\r\n    name: \"\",\r\n    editable: false,\r\n    formatter: renderComponent(ChatBubbleOutlineIcon),\r\n  },\r\n  {\r\n    key: \"owner\",\r\n    name: \"Owner\",\r\n    editable: false,\r\n    formatter: renderComponent(AccountCircleIcon),\r\n  },\r\n  { key: \"status\", name: \"Status\", editor: IssueTypeEditor(statusTypes) },\r\n  {\r\n    key: \"dueDate\",\r\n    name: \"Due Date\",\r\n    formatter: renderComponent(DateComponent),\r\n  },\r\n  {\r\n    key: \"priority\",\r\n    name: \"Priority\",\r\n    editor: IssueTypeEditor(priorityTypes),\r\n  },\r\n].map((c) => ({ ...defaultColumnProperties, ...c }));\r\n\r\nconst rows = [\r\n  {\r\n    id: 1,\r\n    thingsTodo: \"todo name1\",\r\n    messageNotify: \"msg icon\",\r\n    owner: \"photo icon\",\r\n    status: \"Unassigned\",\r\n    dueDate: \"date\",\r\n    priority: \"Unassigned\",\r\n  },\r\n  {\r\n    id: 2,\r\n    thingsTodo: \"todo name2\",\r\n    messageNotify: \"msg icon\",\r\n    owner: \"photo icon\",\r\n    status: \"Unassigned\",\r\n    dueDate: \"date\",\r\n    priority: \"Unassigned\",\r\n  },\r\n  {\r\n    id: 3,\r\n    thingsTodo: \"todo name3\",\r\n    messageNotify: \"msg icon\",\r\n    owner: \"photo icon\",\r\n    status: \"Unassigned\",\r\n    dueDate: \"date\",\r\n    priority: \"Unassigned\",\r\n  },\r\n];\r\n\r\nexport default class Example extends React.Component {\r\n  state = { rows, columns, newTodo: \"\", selectedIds: [1, 1] };\r\n  static defaultProps = { rowKey: \"id\" };\r\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n    this.setState((state) => {\r\n      const rows = state.rows.slice();\r\n      for (let i = fromRow; i <= toRow; i++) {\r\n        rows[i] = { ...rows[i], ...updated };\r\n      }\r\n      return { rows };\r\n    });\r\n  };\r\n  isDraggedRowSelected = (selectedRows, rowDragSource) => {\r\n    if (selectedRows && selectedRows.length > 0) {\r\n      let key = this.props.rowKey;\r\n      return (\r\n        selectedRows.filter((r) => r[key] === rowDragSource.data[key]).length >\r\n        0\r\n      );\r\n    }\r\n    return false;\r\n  };\r\n  onRowsSelected = (rows) => {\r\n    this.setState({\r\n      selectedIds: this.state.selectedIds.concat(\r\n        rows.map((r) => r.row[this.props.rowKey])\r\n      ),\r\n    });\r\n  };\r\n\r\n  onRowsDeselected = (rows) => {\r\n    let rowIds = rows.map((r) => r.row[this.props.rowKey]);\r\n    this.setState({\r\n      selectedIds: this.state.selectedIds.filter(\r\n        (i) => rowIds.indexOf(i) === -1\r\n      ),\r\n    });\r\n  };\r\n\r\n  reorderRows = (e) => {\r\n    let selectedRows = Selectors.getSelectedRowsByKey({\r\n      rowKey: this.props.rowKey,\r\n      selectedKeys: this.state.selectedIds,\r\n      rows: this.state.rows,\r\n    });\r\n    let draggedRows = this.isDraggedRowSelected(selectedRows, e.rowSource)\r\n      ? selectedRows\r\n      : [e.rowSource.data];\r\n    let undraggedRows = this.state.rows.filter(function (r) {\r\n      return draggedRows.indexOf(r) === -1;\r\n    });\r\n    let args = [e.rowTarget.idx, 0].concat(draggedRows);\r\n    Array.prototype.splice.apply(undraggedRows, args);\r\n    this.setState({ rows: undraggedRows });\r\n  };\r\n  onHeaderDrop = (source, target) => {\r\n    const stateCopy = Object.assign({}, this.state);\r\n    const columnSourceIndex = this.state.columns.findIndex(\r\n      (i) => i.key === source\r\n    );\r\n    const columnTargetIndex = this.state.columns.findIndex(\r\n      (i) => i.key === target\r\n    );\r\n\r\n    stateCopy.columns.splice(\r\n      columnTargetIndex,\r\n      0,\r\n      stateCopy.columns.splice(columnSourceIndex, 1)[0]\r\n    );\r\n\r\n    const emptyColumns = Object.assign({}, this.state, { columns: [] });\r\n    this.setState(emptyColumns);\r\n\r\n    const reorderedColumns = Object.assign({}, this.state, {\r\n      columns: stateCopy.columns,\r\n    });\r\n    this.setState(reorderedColumns);\r\n  };\r\n\r\n  render() {\r\n    const { rows, columns, newTodo } = this.state;\r\n    return (\r\n      <>\r\n        <DraggableContainer onHeaderDrop={this.onHeaderDrop}>\r\n          <ReactDataGrid\r\n            columns={columns}\r\n            rowGetter={(i) => rows[i]}\r\n            rowsCount={rows.length}\r\n            onGridRowsUpdated={this.onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n            // row reorder props\r\n            enableCellSelection={true}\r\n            rowActionsCell={RowActionsCell}\r\n            minHeight={500}\r\n            rowRenderer={<RowRenderer onRowDrop={this.reorderRows} />}\r\n            rowSelection={{\r\n              showCheckbox: true,\r\n              enableShiftSelect: true,\r\n              onRowsSelected: this.onRowsSelected,\r\n              onRowsDeselected: this.onRowsDeselected,\r\n              selectBy: {\r\n                keys: {\r\n                  rowKey: this.props.rowKey,\r\n                  values: this.state.selectedIds,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </DraggableContainer>\r\n        <input\r\n          name=\"newTodo\"\r\n          value={newTodo}\r\n          onChange={(e) =>\r\n            this.setState({\r\n              [e.target.name]: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            const newRows = rows;\r\n            const data = {\r\n              id: rows[rows.length - 1].id + 1,\r\n              thingsTodo: newTodo,\r\n              messageNotify: \"\",\r\n              owner: \"\",\r\n              status: \"Unassigned\",\r\n              dueDate: \"\",\r\n              priority: \"Unassigned\",\r\n            };\r\n            newRows.push(data);\r\n            this.setState({ rows: newRows });\r\n          }}\r\n        >\r\n          Add todo\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import 'date-fns';\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function DateComponent() {\r\n  // The first commit of Material-UI\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Grid container justify=\"space-around\">\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label=\"\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n      </Grid>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TodoPage from \"../todo/TodoPage\";\r\n\r\nexport default function Dashboard({ open }) {\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <TodoPage />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from=\"/\" to=\"/dashboard\" />\r\n      <Route path=\"/dashboard\" component={Dashboard} />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Routes from \"../routes/Routes\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Label from \"@material-ui/icons/Label\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport AppleIcon from \"@material-ui/icons/Apple\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\n// import { ReactComponent as DownloadIcon } from \"../../assets/svg/downloads.svg\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport \"./SideNavBar.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tree: {\r\n    color: theme.palette.text.secondary,\r\n    \"&:hover > $content\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&:focus > $content, &$selected > $content\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SideNavBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <div className=\"sideNav-container\">\r\n      <Grid item container justify=\"flex-start\" xs={12}>\r\n        <div className=\"sideNav-icons\">\r\n          <HomeIcon />\r\n          <NotificationsNoneIcon />\r\n          <GetAppIcon />\r\n        </div>\r\n      </Grid>\r\n      <Grid item container alignItems=\"flex-end\" xs={12}>\r\n        <div className=\"sideNav-icons\">\r\n          <PlaylistAddCheckIcon />\r\n          <PersonAddIcon />\r\n          <SearchIcon />\r\n          <HelpIcon className=\"help-icon\" />\r\n          <AccountCircleIcon style={{ fontSize: \"3rem\" }} />\r\n        </div>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary,\r\n    \"&:hover > $content\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&:focus > $content, &$selected > $content\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"$expanded > &\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    \"& $content\": {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  label: {\r\n    fontWeight: \"inherit\",\r\n    color: \"inherit\",\r\n  },\r\n  labelRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0.5, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: \"inherit\",\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    buttonIcon: ButtonIcon,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={`${classes.labelRoot}  tree-item`}>\r\n          {LabelIcon && <LabelIcon className={`${classes.labelIcon}`} />}\r\n          <Typography variant=\"body2\" className={`${classes.labelText}`}>\r\n            {labelText}\r\n          </Typography>\r\n          {ButtonIcon && <ButtonIcon />}\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  labelIcon: PropTypes.elementType,\r\n  buttonIcon: PropTypes.elementType,\r\n  labelText: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Routes from \"../routes/Routes\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport StyledTreeItem from \"./StyledTreeItem\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Label from \"@material-ui/icons/Label\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport AppleIcon from \"@material-ui/icons/Apple\";\r\nimport SideNavBar from \"../sideNavBar/SideNavBar\";\r\nimport \"./Workspaces.scss\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  tree: {\r\n    color: theme.palette.text.secondary,\r\n    \"&:hover > $content\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&:focus > $content, &$selected > $content\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Workspaces({ open, handleDrawerClose }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <>\r\n      <Drawer\r\n        className={`${classes.drawer} drawer-container`}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <SideNavBar />\r\n        <div className=\"workspace-container\">\r\n          <div\r\n            className={classes.drawerHeader}\r\n            style={{ fontSize: \"10px\", minHeight: \"auto\" }}\r\n          >\r\n            <h2 style={{ width: \"100%\", textAlign: \"left\" }}>Workspaces</h2>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"ltr\" ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <div style={{ display: \"flex\", padding: \"5px\" }}>\r\n            <SearchIcon />\r\n            <input className=\"search-field\" placeholder=\"Filter Boards...\" />\r\n          </div>\r\n          <Grid\r\n            style={{ padding: \"5px\" }}\r\n            item\r\n            container\r\n            justify=\"flex-start\"\r\n            xs={12}\r\n          >\r\n            <TreeView\r\n              className={classes.tree}\r\n              style={{ width: \"100%\" }}\r\n              defaultExpanded={[\"1\"]}\r\n              defaultCollapseIcon={<ArrowDropDownIcon />}\r\n              defaultExpandIcon={<ArrowRightIcon />}\r\n              defaultEndIcon={<div style={{ width: 24 }} />}\r\n            >\r\n              <StyledTreeItem\r\n                nodeId=\"1\"\r\n                labelText=\"Main\"\r\n                labelIcon={HomeIcon}\r\n                buttonIcon={AddCircleOutlineIcon}\r\n              >\r\n                <StyledTreeItem\r\n                  nodeId=\"2\"\r\n                  labelText=\"Web Design\"\r\n                  style={{ marginLeft: \"20px\" }}\r\n                />\r\n                <StyledTreeItem\r\n                  nodeId=\"3\"\r\n                  labelText=\"Web Design 1\"\r\n                  style={{ marginLeft: \"20px\" }}\r\n                />\r\n              </StyledTreeItem>\r\n            </TreeView>\r\n          </Grid>\r\n          <Grid item container alignItems=\"flex-end\" xs={12}>\r\n            <List style={{ width: \"100%\" }}>\r\n              {[\"Dashboards\", \"Get the mobile app\"].map((text, index) => (\r\n                <ListItem\r\n                  button\r\n                  key={text}\r\n                  className={index === 0 ? \"dashboards-label\" : \"get-app-label\"}\r\n                >\r\n                  <ListItemText primary={text} /> \r\n                  <ListItemIcon>\r\n                    {index === 1 ? (\r\n                      <>\r\n                        <img\r\n                          src=\"https://img.icons8.com/color/48/000000/google-play.png\"\r\n                          style={{ height: \"25px\" }}\r\n                        />\r\n                        <AppleIcon />\r\n                      </>\r\n                    ) : null}\r\n                  </ListItemIcon>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Grid>\r\n\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z\"\n});\n\nvar SvgPeopleIcon = function SvgPeopleIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPeopleIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/PeopleIcon.1f680358.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\r\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { ReactComponent as PeopleIcon } from \"../../assets/svg/PeopleIcon.svg\";\r\nimport \"./Header.scss\";\r\n\r\nexport default function Header() {\r\n  const { searchText, setSearchText } = useState(\"\");\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div\r\n        className=\"header-primary\"\r\n        style={{ display: \"flex\", flexDirection: \"row\" }}\r\n      >\r\n        <Grid item container justify=\"flex-start\" xs={4}>\r\n          <div\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n            className=\"workspace-title\"\r\n          >\r\n            <h2>\r\n              Web Design\r\n              <span className=\"star-icon\">\r\n                <StarIcon />\r\n              </span>\r\n            </h2>\r\n            <p className=\"board-description\" xs={12}>\r\n              Add board description\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          justify=\"flex-end\"\r\n          xs={8}\r\n          style={{ height: \"35px\" }}\r\n          className=\"headerPrimary-icons\"\r\n        >\r\n          <AccountCircleIcon />\r\n          <div className=\"zoomCall-icon\">\r\n            <img src=\"https://www.vectorlogo.zone/logos/zoomus/zoomus-icon.svg\" />\r\n            Start Zoom Call\r\n          </div>\r\n          <div className=\"people-icon\">\r\n            <PeopleIcon />\r\n            <span>{\"/1\"}</span>\r\n            <span className=\"vertical-bisector\"></span>\r\n            <span>{\"Activities/0\"}</span>\r\n          </div>\r\n          <span>...</span>\r\n        </Grid>\r\n      </div>\r\n      <div\r\n        className=\"header-secondary\"\r\n        style={{ display: \"flex\", flexDirection: \"row\" }}\r\n      >\r\n        <Grid item container justify=\"flex-start\" xs={4}>\r\n          <div\r\n            style={{ display: \"-webkit-inline-box\", flexDirection: \"column\" }}\r\n          >\r\n            <TableChartIcon />\r\n            <h3 className=\"main-table mlr5 mtb0\">Main Table</h3>\r\n            <ExpandMoreIcon />\r\n          </div>\r\n        </Grid>\r\n        <Grid item container justify=\"flex-end\" xs={8}>\r\n          <div className=\"new-item\">\r\n            <Button variant=\"outlined\" size=\"small\">\r\n              New Item\r\n              <ExpandMoreIcon />\r\n            </Button>\r\n          </div>\r\n          <div className=\"search-board\">\r\n            <input\r\n              placeholder=\"Search / Filter board\"\r\n              name=\"searchText\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n            />\r\n          </div>\r\n          <AccountCircleIcon />\r\n          <VisibilityOffIcon />\r\n          <MenuIcon />\r\n        </Grid>\r\n      </div>\r\n      <hr className=\"mt20\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Workspaces from \"../workspaces/Workspaces\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Routes from \"../routes/Routes\";\r\nimport Header from \"../header/Header\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    minWidth: \"1024px\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function Layout() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = (flag) => {\r\n    setOpen(flag);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        onClick={() => handleDrawerOpen(true)}\r\n        edge=\"start\"\r\n        className={clsx(classes.menuButton, open && classes.hide)}\r\n        style={{ position: \"absolute\", top: \"5px\", left: \"15px\" }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n\r\n      <Workspaces\r\n        style={{ position: \"absolute\" }}\r\n        handleDrawerClose={() => handleDrawerOpen(false)}\r\n        open={open}\r\n      />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n        style={{ padding: \"30px\" }}\r\n      >\r\n        {/* header and dashboard component */}\r\n        <Header />\r\n        <Routes />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./components/routes/Routes\";\r\nimport SideNavBar from \"./components/sideNavBar/SideNavBar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Layout from \"./components/layout/Layout\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Layout />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}